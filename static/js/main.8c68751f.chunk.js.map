{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.jsx","components/Form/Form.jsx","components/ListContacts/ListContacts.jsx","App.js","index.js","components/Form/Form.module.css","App.module.css"],"names":["module","exports","Container","children","className","s","container","Form","state","contacts","id","name","number","handleSubmit","e","preventDefault","props","proponSubmit","reset","setState","handleChange","currentTarget","value","form","onSubmit","this","htmlFor","input","type","pattern","title","required","onChange","placeholder","telId","button","Component","ListContacts","onDelete","map","contact","onClick","App","filter","handleAddContact","data","find","toLowerCase","alert","newContact","uuidv4","prevState","handleDeleteContacts","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,+B,uICEf,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,4BCDlBI,E,4MACnBC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDD,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAyB,EAAKN,MAAtBG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEdE,EAAEC,iBACF,EAAKC,MAAMC,aAAaN,EAAMC,GAE9B,EAAKM,S,EAGPA,MAAQ,WACN,EAAKC,SAAS,CACZR,KAAM,GACNC,OAAQ,M,EAIZQ,aAAe,SAAAN,GACb,MAAwBA,EAAEO,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,EAAKH,SAAL,eACGR,EAAOW,K,4CAIZ,WACE,OACE,uBAAMlB,UAAWC,IAAEkB,KAAMC,SAAUC,KAAKZ,aAAxC,UACE,wBAAOa,QAASD,KAAKjB,MAAMG,KAA3B,iBAEE,uBACEP,UAAWC,IAAEsB,MACbC,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUP,KAAKL,aACfE,MAAOG,KAAKjB,MAAMG,KAClBsB,YAAY,sBAIhB,wBAAOP,QAASD,KAAKjB,MAAMI,OAA3B,mBAEE,uBACER,UAAWC,IAAEsB,MACbC,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRrB,GAAIe,KAAKS,MACTF,SAAUP,KAAKL,aACfE,MAAOG,KAAKjB,MAAMI,OAClBqB,YAAY,iBAIhB,wBAAQ7B,UAAWC,IAAE8B,OAAQP,KAAK,SAAlC,gC,GArE0BQ,aCkCnB,SAASC,EAAT,GAA+C,IAAvB5B,EAAsB,EAAtBA,SAAU6B,EAAY,EAAZA,SAC/C,OACE,6BACG7B,EAAS8B,KAAI,SAAAC,GAAO,OACnB,+BACG,IACAA,EAAQ7B,KAFX,MAEoB6B,EAAQ5B,OAC1B,wBAAQgB,KAAK,SAASa,QAAS,kBAAMH,EAASE,EAAQ9B,KAAtD,sBAHO8B,EAAQ9B,S,4BCjCJgC,E,4MACnBlC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhD+B,OAAQ,I,EAGVC,iBAAmB,SAAAC,GACjB,GACE,EAAKrC,MAAMC,SAASqC,MAClB,SAAAN,GAAO,OAAIA,EAAQ7B,KAAKoC,gBAAkBF,EAAKlC,KAAKoC,iBAGtDC,MAAM,GAAD,OAAIH,EAAKlC,KAAT,kCACA,GACL,EAAKH,MAAMC,SAASqC,MAAK,SAAAN,GAAO,OAAIA,EAAQ5B,SAAWiC,EAAKjC,UAE5DoC,MAAM,eAAD,OAAgBH,EAAKjC,OAArB,gCACA,CACL,IAAMqC,EAAa,CACjBvC,GAAIwC,cACJvC,KAAMkC,EAAKlC,KACXC,OAAQiC,EAAKjC,QAGf,EAAKO,UAAS,SAAAgC,GAAS,MAAK,CAC1B1C,SAAS,CAAEwC,GAAH,mBAAkBE,EAAU1C,iB,EAK1C2C,qBAAuB,SAAA1C,GACrB,EAAKS,UAAS,SAAAgC,GAAS,MAAK,CAC1B1C,SAAU0C,EAAU1C,SAASkC,QAAO,SAAAH,GAAO,OAAIA,EAAQ9B,KAAOA,U,EAIlE2C,aAAe,SAAAvC,GACb,EAAKK,SAAS,CAAEwB,OAAQ7B,EAAEO,cAAcC,S,EAG1CgC,mBAAqB,WACnB,MAA6B,EAAK9C,MAA1BC,EAAR,EAAQA,SACF8C,EADN,EAAkBZ,OACcI,cAEhC,OAAOtC,EAASkC,QAAO,qBAAGhC,KACnBoC,cAAcS,SAASD,O,4CAIhC,WACE,IAAQZ,EAAWlB,KAAKjB,MAAhBmC,OACFc,EAAkBhC,KAAK6B,qBAE7B,OACE,eAACpD,EAAD,WACE,oBAAIE,UAAWC,IAAEyB,MAAjB,uBACA,cAAC,EAAD,CAAMN,SAAUC,KAAKmB,mBAErB,oBAAIxC,UAAWC,IAAEI,SAAjB,sBACA,cAAC,EAAD,CAAQa,MAAOqB,EAAQX,SAAUP,KAAK4B,eAEtC,cAAChB,EAAD,CACE5B,SAAUgD,EACVnB,SAAUb,KAAK2B,8B,GApEQhB,aCJjCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1B9D,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,mBAAmB,OAAS,uB,kBCAjFD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,SAAW,yB","file":"static/js/main.8c68751f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3G8k0\"};","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { Component } from 'react';\nimport s from './Form.module.css';\n\nexport default class Form extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n\n    e.preventDefault();\n    this.props.proponSubmit(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label htmlFor={this.state.name}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            value={this.state.name}\n            placeholder=\"Annie Copeland\"\n          />\n        </label>\n\n        <label htmlFor={this.state.number}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id={this.telId}\n            onChange={this.handleChange}\n            value={this.state.number}\n            placeholder=\"227-91-26\"\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import s from './ListContacts.module.css';\n\n// const ListContactsItem = ({ id, name, number, onDelete }) => {\n//   return (\n//     <li className={s.item}>\n//        <p className={s.text}>\n//           {name}: <span className={s.name}>{number}</span>\n//        </p>\n//        <button\n//           className={s.button}\n//           type=\"button\"\n//           onClick={() => onDelete(id)}\n//           title=\"Удалить\"\n//        >\n//          Delete\n//        </button>\n//     </li>\n//   );\n// };\n\n// const ListContacts = ({ contacts, onDelete}) => {\n//   if (contacts.length === 0) return null;\n//   return (\n//     <ul className={s.list}>\n//       {contacts.map(contact => (\n//         <ListContactsItem\n//            {...contact}\n//            onDelete={onDelete}\n//            key={contact.id}\n//         />\n//       ))}\n//     </ul>\n//   )\n// }\n\nexport default function ListContacts({ contacts, onDelete }) {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {' '}\n          {contact.name} : {contact.number}\n          <button type=\"button\" onClick={() => onDelete(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// ListContacts.propTypes = {\n//   contacts: PropTypes.arrayOf (\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name:PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onDelete: PropTypes.func.isRequired,\n// };\n","import React, { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Form from './components/Form/Form.jsx';\nimport ListContacts from './components/ListContacts/ListContacts.jsx';\nimport Filter from './components/Form/Form.jsx';\nimport s from './App.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = data => {\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n      )\n    ) {\n      alert(`${data.name} is already in contacts.`);\n    } else if (\n      this.state.contacts.find(contact => contact.number === data.number)\n    ) {\n      alert(`This number ${data.number} is already in contacts`);\n    } else {\n      const newContact = {\n        id: uuidv4(),\n        name: data.name,\n        number: data.number,\n      };\n\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  handleDeleteContacts = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <Form onSubmit={this.handleAddContact}></Form>\n\n        <h2 className={s.contacts}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <ListContacts\n          contacts={visibleContacts}\n          onDelete={this.handleDeleteContacts}\n        ></ListContacts>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__2FWQ_\",\"form\":\"Form_form__3SQX0\",\"button\":\"Form_button__2nzJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3FYWz\",\"contacts\":\"App_contacts__12YjR\"};"],"sourceRoot":""}